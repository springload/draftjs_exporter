[
    {
        "label": "Plain text",
        "output": {
            "html5lib": "<p>a</p>",
            "lxml": "<p>a</p>",
            "string": "<p>a</p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "33nh8",
                    "text": "a",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Single inline style",
        "output": {
            "html5lib": "<p>asd<strong>f</strong></p>",
            "lxml": "<p>asd<strong>f</strong></p>",
            "string": "<p>asd<strong>f</strong></p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "99n0j",
                    "text": "asdf",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 3,
                            "length": 1,
                            "style": "BOLD"
                        }
                    ],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Nested inline styles",
        "output": {
            "html5lib": "<p><strong><em>BoldItalic</em></strong></p>",
            "lxml": "<p><strong><em>BoldItalic</em></strong></p>",
            "string": "<p><strong><em>BoldItalic</em></strong></p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "9nc73",
                    "text": "BoldItalic",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 0,
                            "length": 10,
                            "style": "BOLD"
                        },
                        {
                            "offset": 0,
                            "length": 10,
                            "style": "ITALIC"
                        }
                    ],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Nested inline styles (inverted)",
        "output": {
            "html5lib": "<p><strong><em>ItalicBold</em></strong></p>",
            "lxml": "<p><strong><em>ItalicBold</em></strong></p>",
            "string": "<p><strong><em>ItalicBold</em></strong></p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "9nc73",
                    "text": "ItalicBold",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 0,
                            "length": 10,
                            "style": "ITALIC"
                        },
                        {
                            "offset": 0,
                            "length": 10,
                            "style": "BOLD"
                        }
                    ],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Adjacent inline styles",
        "output": {
            "html5lib": "<p><em>Bold</em><strong>Italic</strong></p>",
            "lxml": "<p><em>Bold</em><strong>Italic</strong></p>",
            "string": "<p><em>Bold</em><strong>Italic</strong></p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "9nc73",
                    "text": "BoldItalic",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 4,
                            "length": 6,
                            "style": "BOLD"
                        },
                        {
                            "offset": 0,
                            "length": 4,
                            "style": "ITALIC"
                        }
                    ],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Style map defaults",
        "output": {
            "html5lib": "<p><strong>0</strong><code>1</code><em>2</em><u>3</u><s>4</s><sup>5</sup><sub>6</sub><mark>7</mark><q>8</q><small>9</small><samp>a</samp><ins>b</ins><del>c</del><kbd>d</kbd>ef</p>",
            "lxml": "<p><strong>0</strong><code>1</code><em>2</em><u>3</u><s>4</s><sup>5</sup><sub>6</sub><mark>7</mark><q>8</q><small>9</small><samp>a</samp><ins>b</ins><del>c</del><kbd>d</kbd>ef</p>",
            "string": "<p><strong>0</strong><code>1</code><em>2</em><u>3</u><s>4</s><sup>5</sup><sub>6</sub><mark>7</mark><q>8</q><small>9</small><samp>a</samp><ins>b</ins><del>c</del><kbd>d</kbd>ef</p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "9nc73",
                    "text": "0123456789abcdef",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "style": "BOLD"
                        },
                        {
                            "offset": 1,
                            "length": 1,
                            "style": "CODE"
                        },
                        {
                            "offset": 2,
                            "length": 1,
                            "style": "ITALIC"
                        },
                        {
                            "offset": 3,
                            "length": 1,
                            "style": "UNDERLINE"
                        },
                        {
                            "offset": 4,
                            "length": 1,
                            "style": "STRIKETHROUGH"
                        },
                        {
                            "offset": 5,
                            "length": 1,
                            "style": "SUPERSCRIPT"
                        },
                        {
                            "offset": 6,
                            "length": 1,
                            "style": "SUBSCRIPT"
                        },
                        {
                            "offset": 7,
                            "length": 1,
                            "style": "MARK"
                        },
                        {
                            "offset": 8,
                            "length": 1,
                            "style": "QUOTATION"
                        },
                        {
                            "offset": 9,
                            "length": 1,
                            "style": "SMALL"
                        },
                        {
                            "offset": 10,
                            "length": 1,
                            "style": "SAMPLE"
                        },
                        {
                            "offset": 11,
                            "length": 1,
                            "style": "INSERT"
                        },
                        {
                            "offset": 12,
                            "length": 1,
                            "style": "DELETE"
                        },
                        {
                            "offset": 13,
                            "length": 1,
                            "style": "KEYBOARD"
                        }
                    ],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Entity",
        "output": {
            "html5lib": "<p><a href=\"/\" title=\"hi\"><em>a</em></a></p>",
            "lxml": "<p><a href=\"/\" title=\"hi\"><em>a</em></a></p>",
            "string": "<p><a href=\"/\" title=\"hi\"><em>a</em></a></p>"
        },
        "content_state": {
            "entityMap": {
                "0": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "/",
                        "rel": null,
                        "title": "hi"
                    }
                }
            },
            "blocks": [
                {
                    "key": "8r91j",
                    "text": "a",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "style": "ITALIC"
                        }
                    ],
                    "entityRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "key": 0
                        }
                    ]
                }
            ]
        }
    },

    {
        "label": "Entity with data-*",
        "output": {
            "html5lib": "<p><a data-=\"no\" data-False=\"bad\" data-id=\"42\" data-mutability=\"mutable\" extra=\"foo\" href=\"/\" title=\"hi\"><em>a</em></a></p>",
            "lxml": "<p><a data-=\"no\" data-False=\"bad\" data-id=\"42\" data-mutability=\"mutable\" extra=\"foo\" href=\"/\" title=\"hi\"><em>a</em></a></p>",
            "string": "<p><a data-=\"no\" data-False=\"bad\" data-id=\"42\" data-mutability=\"mutable\" extra=\"foo\" href=\"/\" title=\"hi\"><em>a</em></a></p>"
        },
        "content_state": {
            "entityMap": {
                "0": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "/",
                        "rel": null,
                        "title": "hi",
                        "extra": "foo",
                        "data-id": 42,
                        "data-mutability": "mutable",
                        "data-False": "bad",
                        "data-": "no"
                    }
                }
            },
            "blocks": [
                {
                    "key": "8r91j",
                    "text": "a",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "style": "ITALIC"
                        }
                    ],
                    "entityRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "key": 0
                        }
                    ]
                }
            ]
        }
    },
    {
        "label": "Entity with inline style",
        "output": {
            "html5lib": "<p><a href=\"/\"><em>a</em></a></p>",
            "lxml": "<p><a href=\"/\"><em>a</em></a></p>",
            "string": "<p><a href=\"/\"><em>a</em></a></p>"
        },
        "content_state": {
            "entityMap": {
                "0": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "/"
                    }
                }
            },
            "blocks": [
                {
                    "key": "8r91j",
                    "text": "a",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "style": "ITALIC"
                        }
                    ],
                    "entityRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "key": 0
                        }
                    ]
                }
            ]
        }
    },

    {
        "label": "Ordered list",
        "output": {
            "html5lib": "<p>An ordered list:</p><ol><li>One</li><li>Two</li></ol>",
            "lxml": "<p>An ordered list:</p><ol><li>One</li><li>Two</li></ol>",
            "string": "<p>An ordered list:</p><ol><li>One</li><li>Two</li></ol>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "33nh8",
                    "text": "An ordered list:",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                },
                {
                    "key": "8kinl",
                    "text": "One",
                    "type": "ordered-list-item",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                },
                {
                    "key": "ekll4",
                    "text": "Two",
                    "type": "ordered-list-item",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "All plain HTML elements we need",
        "output": {
            "html5lib": "<h2>Title 2</h2><h3>Title 3</h3><h4>Title 4</h4><h5>Title 5</h5><blockquote>Blockquote</blockquote><ul class=\"bullet-list\"><li>List item<ul class=\"bullet-list\"><li>Nested list item</li></ul></li></ul><ol><li>Ordered item <strong>(bold)</strong><ol><li>Nested ordered item <em>(italic)</em></li></ol></li></ol>",
            "lxml": "<h2>Title 2</h2><h3>Title 3</h3><h4>Title 4</h4><h5>Title 5</h5><blockquote>Blockquote</blockquote><ul class=\"bullet-list\"><li>List item<ul class=\"bullet-list\"><li>Nested list item</li></ul></li></ul><ol><li>Ordered item <strong>(bold)</strong><ol><li>Nested ordered item <em>(italic)</em></li></ol></li></ol>",
            "string": "<h2>Title 2</h2><h3>Title 3</h3><h4>Title 4</h4><h5>Title 5</h5><blockquote>Blockquote</blockquote><ul class=\"bullet-list\"><li>List item<ul class=\"bullet-list\"><li>Nested list item</li></ul></li></ul><ol><li>Ordered item <strong>(bold)</strong><ol><li>Nested ordered item <em>(italic)</em></li></ol></li></ol>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {"key": "2tb83", "inlineStyleRanges": [], "type": "header-two", "entityRanges": [], "depth": 0, "text": "Title 2"},
                {"key": "8etgj", "inlineStyleRanges": [], "type": "header-three", "entityRanges": [], "depth": 0, "text": "Title 3"},
                {"key": "3u324", "inlineStyleRanges": [], "type": "header-four", "entityRanges": [], "depth": 0, "text": "Title 4"},
                {"key": "31pit", "inlineStyleRanges": [], "type": "header-five", "entityRanges": [], "depth": 0, "text": "Title 5"},
                {"key": "f4e7d", "inlineStyleRanges": [], "type": "blockquote", "entityRanges": [], "depth": 0, "text": "Blockquote"},
                {"key": "760g6", "inlineStyleRanges": [], "type": "unordered-list-item", "entityRanges": [], "depth": 0, "text": "List item"},
                {"key": "br7nd", "inlineStyleRanges": [], "type": "unordered-list-item", "entityRanges": [], "depth": 1, "text": "Nested list item"},
                {"key": "8q2c6", "inlineStyleRanges": [{"offset": 13, "length": 6, "style": "BOLD"}], "type": "ordered-list-item", "entityRanges": [], "depth": 0, "text": "Ordered item (bold)"},
                {"key": "dp5ml", "inlineStyleRanges": [{"offset": 20, "length": 8, "style": "ITALIC"}], "type": "ordered-list-item", "entityRanges": [], "depth": 1, "text": "Nested ordered item (italic)"}
            ]
        }
    },

    {
        "label": "From https://github.com/icelab/draft-js-ast-exporter/blob/651c807bea12d97dad6f4965ab40481c8f2130dd/test/fixtures/content.js",
        "output": {
            "html5lib": "<h2>DraftJS AST Exporter</h2><p>In your draft-js, <strong>exporting</strong> your <em>content</em>:</p><ol><li>From draft-js internals</li><li>To an abstract syntax tree</li><li>Extensibility.</li></ol><img src=\"http://placekitten.com/500/300\"/>:)<p>Find the project on <a href=\"https://github.com/icelab/draft-js-ast-exporter\">Github</a>.</p>",
            "lxml": "<h2>DraftJS AST Exporter</h2><p>In your draft-js, <strong>exporting</strong> your <em>content</em>:</p><ol><li>From draft-js internals</li><li>To an abstract syntax tree</li><li>Extensibility.</li></ol><img src=\"http://placekitten.com/500/300\">:)<p>Find the project on <a href=\"https://github.com/icelab/draft-js-ast-exporter\">Github</a>.</p>",
            "string": "<h2>DraftJS AST Exporter</h2><p>In your draft-js, <strong>exporting</strong> your <em>content</em>:</p><ol><li>From draft-js internals</li><li>To an abstract syntax tree</li><li>Extensibility.</li></ol><img src=\"http://placekitten.com/500/300\"/>:)<p>Find the project on <a href=\"https://github.com/icelab/draft-js-ast-exporter\">Github</a>.</p>"
        },
        "content_state": {
            "entityMap": {
                "0": {
                    "type": "IMAGE",
                    "mutability": "IMMUTABLE",
                    "data": {
                        "src": "http://placekitten.com/500/300",
                        "caption": "Image caption",
                        "rightsHolder": "Copyright Place Kitten",
                        "featured": "big"
                    }
                },
                "1": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "https://github.com/icelab/draft-js-ast-exporter"
                    }
                }
            },
            "blocks": [
                {
                    "key": "ag6qs",
                    "text": "DraftJS AST Exporter",
                    "type": "header-two",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                },
                {
                    "key": "59kd9",
                    "text": "In your draft-js, exporting your content:",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [
                        {
                            "offset": 18,
                            "length": 9,
                            "style": "BOLD"
                        },
                        {
                            "offset": 33,
                            "length": 7,
                            "style": "ITALIC"
                        }
                    ],
                    "entityRanges": []
                },
                {
                    "key": "bqjdr",
                    "text": "From draft-js internals",
                    "type": "ordered-list-item",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                },
                {
                    "key": "1pdm1",
                    "text": "To an abstract syntax tree",
                    "type": "ordered-list-item",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                },
                {
                    "key": "1sd0p",
                    "text": "Extensibility.",
                    "type": "ordered-list-item",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                },
                {
                    "key": "9vgd",
                    "text": " :)",
                    "type": "atomic",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": [
                        {
                            "offset": 0,
                            "length": 1,
                            "key": 0
                        }
                    ]
                },
                {
                    "key": "kst0",
                    "text": "Find the project on Github.",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": [
                        {
                            "offset": 20,
                            "length": 6,
                            "key": 1
                        }
                    ]
                }
            ]
        }
    },

    {
        "label": "HTML entities escaping",
        "output": {
            "html5lib": "<p><a href=\"http://www.example.com/?a=1&amp;b=2\">http://www.example.com/?a=1&amp;b=2</a></p>",
            "lxml": "<p><a href=\"http://www.example.com/?a=1&amp;b=2\">http://www.example.com/?a=1&amp;b=2</a></p>",
            "string": "<p><a href=\"http://www.example.com/?a=1&amp;b=2\">http://www.example.com/?a=1&amp;b=2</a></p>"
        },
        "content_state": {
            "entityMap": {
                "0": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "http://www.example.com/?a=1&b=2"
                    }
                }
            },
            "blocks": [
                {
                    "key": "8r91j",
                    "text": "http://www.example.com/?a=1&b=2",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": [
                        {
                            "offset": 0,
                            "length": 31,
                            "key": 0
                        }
                    ]
                }
            ]
        }
    },

    {
        "label": "Multiple decorators",
        "output": {
            "html5lib": "<p>search <a href=\"http://www.google.com#world\">http://www.google.com#world</a> for the <span class=\"hashtag\">#world</span></p>",
            "lxml": "<p>search <a href=\"http://www.google.com#world\">http://www.google.com#world</a> for the <span class=\"hashtag\">#world</span></p>",
            "string": "<p>search <a href=\"http://www.google.com#world\">http://www.google.com#world</a> for the <span class=\"hashtag\">#world</span></p>"
        },
        "content_state": {
            "entityMap": {},
            "blocks": [
                {
                    "key": "8r91j",
                    "text": "search http://www.google.com#world for the #world",
                    "type": "unstyled",
                    "depth": 0,
                    "inlineStyleRanges": [],
                    "entityRanges": []
                }
            ]
        }
    },

    {
        "label": "Big content export",
        "output": {
            "html5lib": "<h2>draftjs_exporter is an HTML exporter for <a href=\"https://github.com/facebook/draft-js\">Draft.js</a> content</h2><blockquote>Try it out by running this file!</blockquote><h3>Features 📝🍸</h3><p>The exporter aims to provide sensible defaults from basic block types and inline styles to HTML, that can easily be customised when required. For more advanced scenarios, an API is provided (mimicking React's <a href=\"https://facebook.github.io/react/docs/top-level-api.html#react.createelement\"><code>createElement</code></a>) to create custom rendering components of arbitrary complexity.</p><hr/><p>Here are some features worth highlighting:</p><ul class=\"bullet-list\"><li>Convert line breaks to <code>&lt;br&gt;</code><br/>elements.</li><li>Automatic conversion of entity data to HTML attributes (int &amp; boolean to string, <a href=\"https://facebook.github.io/react/docs/jsx-in-depth.html\"><code>style object</code> to <code>style string</code></a>).</li><li>Wrapped blocks (<code>&lt;li&gt; </code>elements go inside <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code>).<ul class=\"bullet-list\"><li>With arbitrary nesting.<ul class=\"bullet-list\"><li>Common text styles: <strong>Bold</strong>, <em>Italic</em>, <u>Underline</u>, <code>Monospace</code>, <s>Strikethrough.</s> <kbd>cmd + b</kbd></li><li><s>Overlapping </s><strong><s>te</s></strong><strong><em>xt</em></strong><em> styles. </em><strong style=\"text-decoration: underline;\">Custom styles</strong> too!<ul class=\"bullet-list\"><li><span class=\"hashtag\">#hashtag</span> support via <a href=\"https://github.com/springload/draftjs_exporter/pull/17\">#CompositeDecorators</a>.<ul class=\"bullet-list\"><li>Linkify URLs too! <a href=\"http://example.com/\">http://example.com/</a></li></ul></li></ul></li><li>Depth can go back and forth, it works fiiine (1)</li></ul></li><li>Depth can go back and forth, it works fiiine (2)<ul class=\"bullet-list\"><li>Depth can go back and forth, it works fiiine (3)</li></ul></li><li>Depth can go back and forth, it works fiiine (4)</li></ul></li><li>Depth can go back and forth, it works fiiine (5)</li></ul><img alt=\"Test image alt text\" height=\"200\" src=\"https://placekitten.com/g/300/200\" width=\"300\"/><h3>For developers \ud83d\ude80</h3><ol><li>Import the library</li><li>Define your configuration</li><li>Go!<ol><li>Optionally, define your custom components.</li></ol></li></ol><pre><code>def Blockquote(props):\n    block_data = props['block']['data']\n    return DOM.create_element('blockquote', {\n        'cite': block_data.get('cite')\n    }, props['children'])\n</code></pre><p>Voilà!</p>",
            "lxml": "<h2>draftjs_exporter is an HTML exporter for <a href=\"https://github.com/facebook/draft-js\">Draft.js</a> content</h2><blockquote>Try it out by running this file!</blockquote><h3>Features 📝🍸</h3><p>The exporter aims to provide sensible defaults from basic block types and inline styles to HTML, that can easily be customised when required. For more advanced scenarios, an API is provided (mimicking React's <a href=\"https://facebook.github.io/react/docs/top-level-api.html#react.createelement\"><code>createElement</code></a>) to create custom rendering components of arbitrary complexity.</p><hr><p>Here are some features worth highlighting:</p><ul class=\"bullet-list\"><li>Convert line breaks to <code>&lt;br&gt;</code><br>elements.</li><li>Automatic conversion of entity data to HTML attributes (int &amp; boolean to string, <a href=\"https://facebook.github.io/react/docs/jsx-in-depth.html\"><code>style object</code> to <code>style string</code></a>).</li><li>Wrapped blocks (<code>&lt;li&gt; </code>elements go inside <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code>).<ul class=\"bullet-list\"><li>With arbitrary nesting.<ul class=\"bullet-list\"><li>Common text styles: <strong>Bold</strong>, <em>Italic</em>, <u>Underline</u>, <code>Monospace</code>, <s>Strikethrough.</s> <kbd>cmd + b</kbd></li><li><s>Overlapping </s><strong><s>te</s></strong><strong><em>xt</em></strong><em> styles. </em><strong style=\"text-decoration: underline;\">Custom styles</strong> too!<ul class=\"bullet-list\"><li><span class=\"hashtag\">#hashtag</span> support via <a href=\"https://github.com/springload/draftjs_exporter/pull/17\">#CompositeDecorators</a>.<ul class=\"bullet-list\"><li>Linkify URLs too! <a href=\"http://example.com/\">http://example.com/</a></li></ul></li></ul></li><li>Depth can go back and forth, it works fiiine (1)</li></ul></li><li>Depth can go back and forth, it works fiiine (2)<ul class=\"bullet-list\"><li>Depth can go back and forth, it works fiiine (3)</li></ul></li><li>Depth can go back and forth, it works fiiine (4)</li></ul></li><li>Depth can go back and forth, it works fiiine (5)</li></ul><img alt=\"Test image alt text\" height=\"200\" src=\"https://placekitten.com/g/300/200\" width=\"300\"><h3>For developers \ud83d\ude80</h3><ol><li>Import the library</li><li>Define your configuration</li><li>Go!<ol><li>Optionally, define your custom components.</li></ol></li></ol><pre><code>def Blockquote(props):\n    block_data = props['block']['data']\n    return DOM.create_element('blockquote', {\n        'cite': block_data.get('cite')\n    }, props['children'])\n</code></pre><p>Voilà!</p>",
            "string": "<h2>draftjs_exporter is an HTML exporter for <a href=\"https://github.com/facebook/draft-js\">Draft.js</a> content</h2><blockquote>Try it out by running this file!</blockquote><h3>Features 📝🍸</h3><p>The exporter aims to provide sensible defaults from basic block types and inline styles to HTML, that can easily be customised when required. For more advanced scenarios, an API is provided (mimicking React&#x27;s <a href=\"https://facebook.github.io/react/docs/top-level-api.html#react.createelement\"><code>createElement</code></a>) to create custom rendering components of arbitrary complexity.</p><hr/><p>Here are some features worth highlighting:</p><ul class=\"bullet-list\"><li>Convert line breaks to <code>&lt;br&gt;</code><br/>elements.</li><li>Automatic conversion of entity data to HTML attributes (int &amp; boolean to string, <a href=\"https://facebook.github.io/react/docs/jsx-in-depth.html\"><code>style object</code> to <code>style string</code></a>).</li><li>Wrapped blocks (<code>&lt;li&gt; </code>elements go inside <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code>).<ul class=\"bullet-list\"><li>With arbitrary nesting.<ul class=\"bullet-list\"><li>Common text styles: <strong>Bold</strong>, <em>Italic</em>, <u>Underline</u>, <code>Monospace</code>, <s>Strikethrough.</s> <kbd>cmd + b</kbd></li><li><s>Overlapping </s><strong><s>te</s></strong><strong><em>xt</em></strong><em> styles. </em><strong style=\"text-decoration: underline;\">Custom styles</strong> too!<ul class=\"bullet-list\"><li><span class=\"hashtag\">#hashtag</span> support via <a href=\"https://github.com/springload/draftjs_exporter/pull/17\">#CompositeDecorators</a>.<ul class=\"bullet-list\"><li>Linkify URLs too! <a href=\"http://example.com/\">http://example.com/</a></li></ul></li></ul></li><li>Depth can go back and forth, it works fiiine (1)</li></ul></li><li>Depth can go back and forth, it works fiiine (2)<ul class=\"bullet-list\"><li>Depth can go back and forth, it works fiiine (3)</li></ul></li><li>Depth can go back and forth, it works fiiine (4)</li></ul></li><li>Depth can go back and forth, it works fiiine (5)</li></ul><img alt=\"Test image alt text\" height=\"200\" src=\"https://placekitten.com/g/300/200\" width=\"300\"/><h3>For developers \ud83d\ude80</h3><ol><li>Import the library</li><li>Define your configuration</li><li>Go!<ol><li>Optionally, define your custom components.</li></ol></li></ol><pre><code>def Blockquote(props):\n    block_data = props['block']['data']\n    return DOM.create_element('blockquote', {\n        'cite': block_data.get('cite')\n    }, props['children'])\n</code></pre><p>Voilà!</p>"
        },
        "content_state": {
            "entityMap": {
                "0": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "https://github.com/facebook/draft-js"
                    }
                },
                "1": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "https://facebook.github.io/react/docs/top-level-api.html#react.createelement"
                    }
                },
                "2": {
                    "type": "HORIZONTAL_RULE",
                    "mutability": "IMMUTABLE",
                    "data": {}
                },
                "3": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "https://facebook.github.io/react/docs/jsx-in-depth.html"
                    }
                },
                "4": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "https://github.com/springload/draftjs_exporter/pull/17"
                    }
                },
                "5": {
                    "type": "IMAGE",
                    "mutability": "IMMUTABLE",
                    "data": {
                        "alt": "Test image alt text",
                        "src": "https://placekitten.com/g/300/200",
                        "width": 300,
                        "height": 200
                    }
                },
                "6": {
                    "type": "LINK",
                    "mutability": "MUTABLE",
                    "data": {
                        "url": "http://embed.ly/"
                    }
                },
                "7": {
                    "type": "EMBED",
                    "mutability": "IMMUTABLE",
                    "data": {
                        "url": "http://www.youtube.com/watch?v=feUYwoLhE_4",
                        "title": "React.js Conf 2016 - Isaac Salier-Hellendag - Rich Text Editing with React",
                        "providerName": "YouTube",
                        "authorName": "Facebook Developers",
                        "thumbnail": "https://i.ytimg.com/vi/feUYwoLhE_4/hqdefault.jpg"
                    }
                }
            },
            "blocks": [{
                "key": "b0ei9",
                "text": "draftjs_exporter is an HTML exporter for Draft.js content",
                "type": "header-two",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [{
                    "offset": 41,
                    "length": 8,
                    "key": 0
                }],
                "data": {}
            }, {
                "key": "74al",
                "text": "Try it out by running this file!",
                "type": "blockquote",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {
                    "cite": "http://example.com/"
                }
            }, {
                "key": "7htbd",
                "text": "Features 📝🍸",
                "type": "header-three",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "32lnv",
                "text": "The exporter aims to provide sensible defaults from basic block types and inline styles to HTML, that can easily be customised when required. For more advanced scenarios, an API is provided (mimicking React's createElement) to create custom rendering components of arbitrary complexity.",
                "type": "unstyled",
                "depth": 0,
                "inlineStyleRanges": [{
                    "offset": 209,
                    "length": 13,
                    "style": "CODE"
                }],
                "entityRanges": [{
                    "offset": 209,
                    "length": 13,
                    "key": 1
                }],
                "data": {}
            }, {
                "key": "eqjvu",
                "text": " ",
                "type": "atomic",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [{
                    "offset": 0,
                    "length": 1,
                    "key": 2
                }],
                "data": {}
            }, {
                "key": "9fr0j",
                "text": "Here are some features worth highlighting:",
                "type": "unstyled",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "2mhgt",
                "text": "Convert line breaks to <br>\nelements.",
                "type": "unordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [{
                    "offset": 23,
                    "length": 4,
                    "style": "CODE"
                }],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "f4gp0",
                "text": "Automatic conversion of entity data to HTML attributes (int & boolean to string, style object to style string).",
                "type": "unordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [{
                    "offset": 81,
                    "length": 12,
                    "style": "CODE"
                }, {
                    "offset": 97,
                    "length": 12,
                    "style": "CODE"
                }],
                "entityRanges": [{
                    "offset": 81,
                    "length": 28,
                    "key": 3
                }],
                "data": {}
            }, {
                "key": "3cnm0",
                "text": "Wrapped blocks (<li> elements go inside <ul> or <ol>).",
                "type": "unordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [{
                    "offset": 16,
                    "length": 5,
                    "style": "CODE"
                }, {
                    "offset": 40,
                    "length": 4,
                    "style": "CODE"
                }, {
                    "offset": 48,
                    "length": 4,
                    "style": "CODE"
                }],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "h5rn",
                "text": "With arbitrary nesting.",
                "type": "unordered-list-item",
                "depth": 1,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "5qfeb",
                "text": "Common text styles: Bold, Italic, Underline, Monospace, Strikethrough. cmd + b",
                "type": "unordered-list-item",
                "depth": 2,
                "inlineStyleRanges": [{
                    "offset": 20,
                    "length": 4,
                    "style": "BOLD"
                }, {
                    "offset": 26,
                    "length": 6,
                    "style": "ITALIC"
                }, {
                    "offset": 34,
                    "length": 9,
                    "style": "UNDERLINE"
                }, {
                    "offset": 45,
                    "length": 9,
                    "style": "CODE"
                }, {
                    "offset": 56,
                    "length": 14,
                    "style": "STRIKETHROUGH"
                }, {
                    "offset": 71,
                    "length": 7,
                    "style": "KBD"
                }],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "2ol8n",
                "text": "Overlapping text styles. Custom styles too!",
                "type": "unordered-list-item",
                "depth": 2,
                "inlineStyleRanges": [{
                    "offset": 0,
                    "length": 14,
                    "style": "STRIKETHROUGH"
                }, {
                    "offset": 12,
                    "length": 4,
                    "style": "BOLD"
                }, {
                    "offset": 14,
                    "length": 11,
                    "style": "ITALIC"
                }, {
                    "offset": 25,
                    "length": 13,
                    "style": "HIGHLIGHT"
                }],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "2lno0",
                "text": "#hashtag support via #CompositeDecorators.",
                "type": "unordered-list-item",
                "depth": 3,
                "inlineStyleRanges": [],
                "entityRanges": [{
                    "offset": 21,
                    "length": 20,
                    "key": 4
                }],
                "data": {}
            }, {
                "key": "37n0m",
                "text": "Linkify URLs too! http://example.com/",
                "type": "unordered-list-item",
                "depth": 4,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "37n01",
                "text": "Depth can go back and forth, it works fiiine (1)",
                "type": "unordered-list-item",
                "depth": 2,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "37n02",
                "text": "Depth can go back and forth, it works fiiine (2)",
                "type": "unordered-list-item",
                "depth": 1,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "37n03",
                "text": "Depth can go back and forth, it works fiiine (3)",
                "type": "unordered-list-item",
                "depth": 2,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "37n04",
                "text": "Depth can go back and forth, it works fiiine (4)",
                "type": "unordered-list-item",
                "depth": 1,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "37n05",
                "text": "Depth can go back and forth, it works fiiine (5)",
                "type": "unordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "3tbpg",
                "text": " ",
                "type": "atomic",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [{
                    "offset": 0,
                    "length": 1,
                    "key": 5
                }],
                "data": {}
            }, {
                "key": "f7s8c",
                "text": " ",
                "type": "atomic",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [{
                    "offset": 0,
                    "length": 1,
                    "key": 7
                }],
                "data": {}
            }, {
                "key": "5t6c9",
                "text": "For developers 🚀",
                "type": "header-three",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "2nb2a",
                "text": "Import the library",
                "type": "ordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "cfom5",
                "text": "Define your configuration",
                "type": "ordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "e2114",
                "text": "Go!",
                "type": "ordered-list-item",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "adt4j",
                "text": "Optionally, define your custom components.",
                "type": "ordered-list-item",
                "depth": 1,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "ed7hu",
                "text": "def Blockquote(props):\n    block_data = props['block']['data']\n    return DOM.create_element('blockquote', {\n        'cite': block_data.get('cite')\n    }, props['children'])\n",
                "type": "code-block",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }, {
                "key": "1nols",
                "text": "Voilà!",
                "type": "unstyled",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
            }]
        }
    }
]
